#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include<Windows.h>
#include<conio.h>
#define NULL 0
#define WALL 1
#define CHARACTER 2
#define STAR 3
#define X 1
#define Y 0
#define WIDTH 10
#define HEIGHT 20
#define LEFT 'a'
#define RIGHT 'd'
int Map[HEIGHT][WIDTH] = {
  {	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	0,	0,	0,	0,	1 },
  { 	1,	0,	0,	0,	0,	2,	0,	0,	0,	1 },
};
int character[2];
int Score;
int GameOver = 0;
void Init()
{
	srand(time(NULL));
	Score = 0;
	for (int y = 0; y < HEIGHT; y++)
	{
		for (int x = 0; x < WIDTH; x++)
		{
			if (Map[y][x] == CHARACTER)
			{
				character[X] = x;
				character[Y] = y;
			}
		}
	}
}

void Reset()
{
	for (int y = 0; y < HEIGHT; y++)
	{
		for (int x = 0; x < WIDTH; x++)
		{
			if (Map[y][x] == STAR || Map[y][x] == CHARACTER)
				Map[y][x] = NULL;
		}
	}
	Map[HEIGHT - 1][WIDTH / 2] = CHARACTER;
	GameOver = 0;
}

void MapDraw()
{
	system("cls");
	for (int y = 0; y < HEIGHT; y++)
	{
		for (int x = 0; x < WIDTH; x++)
		{
			if (Map[y][x] == CHARACTER)
				printf("옷");
			else if (Map[y][x] == STAR)
				printf("☆");
			else if (Map[y][x] == WALL) 
				printf("│");
			else
				printf("  ");
		}
		printf("\n");
	}
	printf("Score = %d", Score);
}

void Input()
{
	char ch = getch();
	Map[character[Y]][character[X]] = NULL;
	switch (ch)
	{
	case LEFT:
		if (Map[character[Y]][character[X] - 1] != WALL)
			character[X]--;
		break;
	case RIGHT:
		if (Map[character[Y]][character[X] + 1] != WALL)
			character[X]++;
		break;
	}
	Map[character[Y]][character[X]] = CHARACTER;
}

void Update()
{
	if (rand() % 3 == 0)
	{
		int x = (rand() % 8) + 1;
		Map[0][x] = STAR;
	}
	for (int y = HEIGHT-1; y >= 0; y--)
	{
		for (int x = 0; x < WIDTH; x++)
		{
			if (Map[y][x] == STAR)
			{
				Map[y][x] = NULL;
				if (Map[y + 1][x] == CHARACTER)
					GameOver = 1;
				else if (y + 1 < HEIGHT)
					Map[y + 1][x] = STAR;
				else
					Score++;
			}
		}
	}
}


void Menu()
{
	printf("=====별똥별 피하기===\n");
	printf("     1.게임 시작\n");
	printf("     2.종료\n");
}

void GamePlay()
{
	while (!GameOver)
	{
		MapDraw();
		if (kbhit())
			Input();
		Update();
		Sleep(33);
	}
	printf("게임 종료\n");
	system("pause");
}

void main()
{
	int Select;
	while (1)
	{
		system("cls");
		Init();
		Menu();
		scanf("%d", &Select);
		switch (Select)
		{
		case 1:
			GamePlay();
			Reset();
			break;
		case 2:
			return;
		}

	}
}
