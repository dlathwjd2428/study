#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>
#include<Windows.h>
#define col GetStdHandle(STD_OUTPUT_HANDLE) 
#define BLACK SetConsoleTextAttribute( col,0x0000 );
#define DARK_BLUE SetConsoleTextAttribute( col,0x0001 );
#define GREEN SetConsoleTextAttribute( col,0x0002 );
#define BLUE_GREEN SetConsoleTextAttribute( col,0x0003 );
#define BLOOD SetConsoleTextAttribute( col,0x0004 );
#define PUPPLE SetConsoleTextAttribute( col,0x0005 );
#define GOLD SetConsoleTextAttribute( col,0x0006 );			//색상 지정
#define ORIGINAL SetConsoleTextAttribute( col,0x0007 );
#define GRAY SetConsoleTextAttribute( col,0x0008 );
#define BLUE SetConsoleTextAttribute( col,0x0009 );
#define HIGH_GREEN SetConsoleTextAttribute( col,0x000a );
#define SKY_BLUE SetConsoleTextAttribute//( col,0x000b );
#define RED SetConsoleTextAttribute( col,0x000c );
#define PLUM SetConsoleTextAttribute( col,0x000d );
#define YELLOW SetConsoleTextAttribute( col,0x000e );
#define LEFT 75
#define RIGHT 77
#define WEIGHT 10
#define HEIGHT 20
#define WALL 1
#define STAR 2
#define CHARACTER 3
#define CHARACTERY HEIGHT-1

int a[HEIGHT][WEIGHT] = { 0 }; // 배열로 그릴 자리 만듬
int characterX;
int count = 0;
//init 함수
void init()
{
	for(int y = 0; y < HEIGHT; y++)
	{
		for(int x = 0; x < WEIGHT; x++)
		{
			if(x == 0 || x == 9) //첫열과 끝열은 벽으로
				a[y][x] = WALL; //무조건고정이라서
		}
	}
	characterX = WEIGHT / 2;
	a[CHARACTERY][characterX] = CHARACTER;
}

//move 조작함수
void move()
{
	char ch;
	ch = getch();
	a[CHARACTERY][characterX] = NULL;
	switch(ch)
	{
		case LEFT:
			if(a[CHARACTERY][characterX - 1] != WALL)
				characterX--;
			break;
		case RIGHT:
			if(a[CHARACTERY][characterX + 1] != WALL)
				characterX++;
			break;
	}
	a[CHARACTERY][characterX] = CHARACTER;
}

//draw 함수 
void draw() // m.o
{
	system("cls");
	for(int y = 0; y < HEIGHT; y++)
	{
		for(int x = 0; x < WEIGHT; x++) //각자리값마다 뭐그려넣을지 지정
		{
			if(a[y][x] == WALL) //벽그리기
				printf("▦");
			else if(a[y][x] == STAR) //별그리기
				printf("★");
			else if(a[y][x] == CHARACTER) //캐릭터그리기
			{
				RED
					printf("▲");
				ORIGINAL
			}
			else
				printf("  ");
		}
		printf("\n"); //개행
	}
	printf("SCORE : %d", count);
}

//update 함수
void update()
{
	for(int i = 0; i < 5; i++)
	{
		if(rand() % 10 == 0)
			a[0][(rand() % 8) + 1] = STAR;
	}
	for(int y = HEIGHT - 1; y >= 0; y--)
	{
		for(int x = 0; x < WEIGHT; x++)
		{
			if(a[y][x] == STAR)
			{
				a[y][x] = NULL;
				if(y + 1 >= HEIGHT)
					count++;
				else
				{
					a[y+1][x] = STAR;
					if(a[CHARACTERY][characterX] == a[y+1][x])
					{
						system("cls");
						printf("GAMEOVER\n");
						Sleep(3000);
						exit(1);
					}
				}
			}
		}
	}
}

//menu 함수
void menu()
{
	system("cls");
	int select;
	printf("=====별똥별 피하기 게임=====\n");
	printf("       1. 게임 시작 \n");
	printf("       2. 종료 \n");
	printf("===========================\n");
	printf(" INSERT ) ");
}

//main 함수
void main()
{
	int select;
	srand(time(NULL));
	init();
	while(1)
	{
		menu();
		scanf("%d", &select);
		switch(select)
		{
			case 1:
				while(1)
				{
					draw();
					Sleep(33);
					if(kbhit())
						move();
					update();
				}
				break;
			case 2:
				return;
		}
		system("pasue");
	}
}